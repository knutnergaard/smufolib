name: Continuous Integration

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ruff Lint Check
        uses: astral-sh/ruff-action@v3
        with:
          version: "latest"
          src: "./smufolib"

      - name: Ruff Format Check
        uses: astral-sh/ruff-action@v3
        with:
          version: "latest"
          src: "./smufolib"
          args: "format --check"

  mypy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4	

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  
          python -m pip install -r requirements.txt -r requirements-dev.txt

      - name: Run mypy
        run: mypy smufolib

  tests:
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
  
      # Debugging before installation
      - name: Debug Python version
        run: python --version
  
      - name: Debug pip version
        run: pip --version
  
      - name: List installed packages before installing dependencies
        run: pip list
  
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
  
      # Force reinstall pip before installing anything else
      - name: Force reinstall pip
        run: python -m pip install --upgrade --force-reinstall pip
  
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt -r requirements-dev.txt
          python -m pip install -e .
  
      # Debugging after installing dependencies
      - name: Verify installed dependencies
        run: pip list

      - name: Debug Test Execution
        run: python -m unittest discover -v smufolib

      - name: Debug Installed Packages
        run: python -m pip check

      - name: Debug Test Execution
        run: python smufolib/test.py
  
      - name: Run tests with coverage
        run: | 
          coverage run --source=smufolib -m unittest smufolib.test
          coverage report -m
  
      - name: Generate coverage report
        run: coverage xml
  