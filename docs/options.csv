"Argument","Option","Type","Description"
"`attributes`","``--attributes, -a``",":class:`list`","Attribute names to include in processing."
"`classesData`","``--classes-data, -C``",":class:`~smufolib.request.Request`","Path to classes metadata file."
"`clear`","``--clear, -x``",":class:`bool`","Erase preexisting objects on execution."
"`color`","``--color, -c``",":class:`list`","List of RGBA color values."
"`colors`","``--colors, -c``",":func:`~json.loads`","Keys mapped to RGBA color arrays as JSON string."
"`exclude`","``--exclude, -e``",":class:`list`","Objects to exclude from processing."
"`font`","``--font, -f``",":class:`~smufolib.objects.font.Font`","Path to UFO file."
"`fontData`","``--font-data, -F``",":class:`~smufolib.request.Request`","Path to font metadata file."
"`glyphnamesData`","``--glyphnames-data, -G``",":class:`~smufolib.request.Request`","Path to glyphnames metadata file."
"`include`","``--include, -i``",":class:`list`","Objects to include in processing."
"`includeOptionals`","``--include-optionals, -O``",":class:`bool`","Include optional glyphs."
"`mark`","``--mark, -m``",":class:`bool`","Apply defined color values to objects."
"`overwrite`","``--overwrite, -o``",":class:`bool`","Overwrite preexisting values."
"`rangesData`","``--ranges-data, -r``",":class:`~smufolib.request.Request`","Path to ranges metadata file."
"`sourcePath`","``--source-path, -S``",":class:`~smufolib.request.Request`","Path to source file or directory."
"`spaces`","``--spaces, -s``",":class:`bool`","Set unit of measurement to staff spaces."
"`targetPath`","``--target-path, -T``",":class:`str`","Path to target file or directory."
"`verbose`","``--verbose, -v``",":class:`bool`","Make output verbose."
